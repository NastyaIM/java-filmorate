CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    EMAIL VARCHAR NOT NULL,
    LOGIN VARCHAR NOT NULL,
    NAME VARCHAR,
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS
(
    USER_ID INTEGER NOT NULL,
    FRIEND_ID INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL,
    RELEASE_DATE DATE,
    DURATION INTEGER,
    RATING_ID INTEGER
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA
(
    RATING_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    RATING_NAME VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES
(
    FILM_ID INTEGER,
    GENRE_ID INTEGER
);

CREATE TABLE IF NOT EXISTS LIKES
(
    FILM_ID INTEGER,
    USER_ID INTEGER
);

ALTER TABLE LIKES ADD CONSTRAINT likes_unique UNIQUE (FILM_ID, USER_ID);
ALTER TABLE FILMS_GENRES ADD CONSTRAINT films_genres_unique UNIQUE (FILM_ID, GENRE_ID);

ALTER TABLE FILMS ADD CONSTRAINT IF NOT EXISTS fk_film_rating_id FOREIGN KEY(RATING_ID)
    REFERENCES MPA (RATING_ID);

ALTER TABLE FRIENDSHIPS ADD CONSTRAINT IF NOT EXISTS fk_friendship_user_id FOREIGN KEY(USER_ID)
    REFERENCES USERS (USER_ID);

ALTER TABLE FRIENDSHIPS ADD CONSTRAINT IF NOT EXISTS fk_friendship_friend_id FOREIGN KEY(FRIEND_ID)
    REFERENCES USERS (USER_ID);

ALTER TABLE FILMS_GENRES ADD CONSTRAINT IF NOT EXISTS fk_genre_film_film_id FOREIGN KEY(FILM_ID)
    REFERENCES FILMS (FILM_ID);

ALTER TABLE FILMS_GENRES ADD CONSTRAINT IF NOT EXISTS fk_genre_film_genre_id FOREIGN KEY(GENRE_ID)
    REFERENCES GENRES (GENRE_ID);

ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS fk_likes_film_id FOREIGN KEY(FILM_ID)
    REFERENCES FILMS (FILM_ID);

ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS fk_likes_user_id FOREIGN KEY(USER_ID)
    REFERENCES USERS (USER_ID);
